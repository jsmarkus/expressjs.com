section
  h3(id='res.cookie') res.cookie(name, value, [options])
  p.
    Присваивает куки <code>name</code> значение <code>value</code>,
    это может быть строка или объект, преобразовываемый в JSON. Путь <code>path</code>
    по умолчанию равен "/".

  +js.
    res.cookie('name', 'tobi', { domain: '.example.com', path: '/admin', secure: true });
    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });

  p.
    Опция <code>maxAge</code> нужна для установки "expires"
    относительно текущего времени в миллисекундах. Следующий пример равносилен
    предыдущему.

  +js.
    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })

  p.
    Можно передавать объект, он будет преобразован в JSON, а затем
    автоматически преобразован обратно в объект в прослойке <code>bodyParser()</code>.

  +js.
    res.cookie('cart', { items: [1,2,3] });
    res.cookie('cart', { items: [1,2,3] }, { maxAge: 900000 });

  p.
    Метод также поддерживает подписанные куки. Просто
    передайте опцию <code>signed</code>. Чтобы подписать значение, 
    res.cookie() будет использовать secret,
    переданный в <code>express.cookieParser(secret)</code>.

  +js.
    res.cookie('name', 'tobi', { signed: true });

  p.
    Потом можно обращаться к этому значению через
    объект <a href="#req.signedCookies">req.signedCookie</a>.