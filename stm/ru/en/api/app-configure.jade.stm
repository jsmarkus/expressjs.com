@section
@  h3(id='app.configure') app.configure([env], callback)
@
@  p.
@    Conditionally invoke <code>callback</code> when <code>env</code> matches <code>app.get('env')</code>,
#    Условно вызывает <code>callback</code> когда <code>env</code> равен <code>app.get('env')</code>,
@    aka <code>process.env.NODE_ENV</code>. This method remains for legacy reason, and is effectively
#    что равносильно, <code>process.env.NODE_ENV</code>. Этот метод оставлен из соображений обратной совместимости
@    an <code>if</code> statement as illustrated in the following snippets. These functions are <em>not</em>
#    и полностью эквивалентен конструкции <code>if</code>, что показано в примере ниже. Эти функции не обязательно должны
@    required in order to use <code>app.set()</code> and other configuration methods.
#    вызывать <code>app.set()</code> или другие методы конфигурации.
@
@  +js.
@    // all environments
#    // все окружения
@    app.configure(function(){
@      app.set('title', 'My Application');
@    })
@
@    // development only
#    // только разработка
@    app.configure('development', function(){
@      app.set('db uri', 'localhost/dev');
@    })
@    
@    // production only
#    //только продакшен
@    app.configure('production', function(){
@      app.set('db uri', 'n.n.n.n/prod');
@    })
@
@  Is effectively sugar for:
#  Равносильно следующему:
@
@  +js.
@    // all environments
#    // все окружения
@    app.set('title', 'My Application');
@
@    // development only
#    // только разработка
@    if ('development' == app.get('env')) {
@      app.set('db uri', 'localhost/dev');
@    }
@    
@    // production only
#    // только продакшен
@    if ('production' == app.get('env')) {
@      app.set('db uri', 'n.n.n.n/prod');
@    }
@