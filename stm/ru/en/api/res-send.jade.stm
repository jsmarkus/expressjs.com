@section
@  h3(id='res.send') res.send([body|status], [body])
@  
@  p.
@    Send a response.
#    Отправка ответа.
@
@  +js.
@    res.send(new Buffer('whoop'));
#    res.send(new Buffer('пыщь'));
@    res.send({ some: 'json' });
@    res.send('<p>some html</p>');
#    res.send('<p>какой-то html</p>');
@    res.send(404, 'Sorry, we cannot find that!');
#    res.send(404, 'Извините, ничего не найдено!!');
@    res.send(500, { error: 'something blew up' });
#    res.send(500, { error: 'что-то сломалось' });
@    res.send(200);
@
@  p.
@    This method performs a myriad of
#    Этот метод выполняет множество
@    useful tasks for simple non-streaming responses such
#    полезных задач для простых не-потоковых ответов,
@    as automatically assigning the Content-Length unless
#    например, автоматически выставляет Content-Length (если не задано)
@    previously defined and providing automatic <em>HEAD</em> and
#    и обеспечивает поддержку <em>HEAD</em>-запросов и
@    HTTP cache freshness support.
#    управляет заголовками кэширования.
@
@  p.
@    When a <code>Buffer</code> is given
#    Если передан <code>Buffer</code>,
@    the Content-Type is set to "application/octet-stream"
#    Content-Type устанавливается в "application/octet-stream"
@    unless p)(reviously defined as shown below:
#    (если не задан ранее вручную):
@
@  +js.
@    res.set('Content-Type', 'text/html');
@    res.send(new Buffer('<p>some html</p>'));
#    res.send(new Buffer('<p>какой-то html</p>'));
@
@  p.
@    When a <code>String</code> is given the
#    Когда передана строка,
@    Content-Type is set defaulted to "text/html":
#    Content-Type устанавливается в "text/html":
@
@  +js.
@    res.send('<p>some html</p>');
#    res.send('<p>какой-то html</p>');
@
@  p.
@    When an <code>Array</code> or <code>Object</code> is
#    Когда передан <code>Array</code> или <code>Object</code>
@    given Express will respond with the JSON representation:
#    Express ответит JSON-представлением:
@
@  +js.
@    res.send({ user: 'tobi' })
#    res.send({ user: 'вася' })
@    res.send([1,2,3])
@
@  p.
@    Finally when a <code>Number</code> is given without
#    Наконец, когда передано число
@    any of the previously mentioned bodies, then a response
#    и больше ничего, тело ответа
@    body string is assigned for you. For example 200 will
#    будет сгенерировано. Например, для кода 200
@    respond will the text "OK", and 404 "Not Found" and so on.
#    ответ будет "OK", для 404 - "Not Found" и т.д.
@
@  +js.
@    res.send(200)
@    res.send(404)
@    res.send(500)
@
