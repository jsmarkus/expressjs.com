section
  h3(id='res.send') res.send([body|status], [body])
  
  p.
    Отправка ответа.

  +js.
    res.send(new Buffer('пыщь'));
    res.send({ some: 'json' });
    res.send('<p>какой-то html</p>');
    res.send(404, 'Извините, ничего не найдено!!');
    res.send(500, { error: 'что-то сломалось' });
    res.send(200);

  p.
    Этот метод выполняет множество
    полезных задач для простых не-потоковых ответов,
    например, автоматически выставляет Content-Length (если не задано)
    и обеспечивает поддержку <em>HEAD</em>-запросов и
    управляет заголовками кэширования.

  p.
    Если передан <code>Buffer</code>,
    Content-Type устанавливается в "application/octet-stream"
    unless previously defined as shown below:

  +js.
    res.set('Content-Type', 'text/html');
    res.send(new Buffer('<p>какой-то html</p>'));

  p.
    Когда передана строка,
    Content-Type устанавливается в "text/html":

  +js.
    res.send('<p>какой-то html</p>');

  p.
    Когда передан <code>Array</code> или <code>Object</code>
    Express ответит JSON-представлением:

  +js.
    res.send({ user: 'вася' })
    res.send([1,2,3])

  p.
    Наконец, когда передано число
    и больше ничего, тело ответа
    будет сгенерировано. Например, для кода 200
    ответ будет "OK", для 404 - "Not Found" и т.д.

  +js.
    res.send(200)
    res.send(404)
    res.send(500)
